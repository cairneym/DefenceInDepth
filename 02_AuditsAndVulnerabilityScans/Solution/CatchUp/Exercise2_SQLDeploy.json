{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":"1.0.0.0",
    "parameters": {
        "randomiser": {
            "type": "string",
            "metadata": {
                "description": "A 5 character string to append to the SQL Server and VM DNS names to make them globally unique"
            }
        },
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the SQL Server"
            }
        },
        "sqlAdminLogin": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server Administrator login account"
            }
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the SQL Server administrator login"
            }
        },
        "adGroupSID": {
            "type": "string",
            "metadata": {
                "description": "The Azure Active Directory ObjectID of the SQLAdmins Group to set as Administrators"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the Resource Group where the Virtual Network is deployed"
            }
        },
        "notificationEmail": {
            "type": "string",
            "metadata": {
                "description": "The email address to send Vulnerability Scans and Security notifications to"
            }
        }
    },
    "variables": {
        // General fixed values
        "vnetName": "NDC-VirtualNetwork",
        "databaseName":"AdventureWorksLT",
        "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        // Buid the final SQL and Storage Account names
        "uniqueSQLName": "[concat(parameters('sqlServerName'), '-', parameters('randomiser'))]",
        "auditStorageAccount": "[concat('sqlaudit',parameters('randomiser'))]",
        "vulnerabilityStorageAccount": "[concat('sqlvulnerability',parameters('randomiser'))]",
        // UNique values for the Storage Manipulation
        "uniqueAuditStorageGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts',  variables('auditStorageAccount')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers',variables('uniqueSQLName')))]",
        "uniqueVulnerabilityStorageGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts',  variables('vulnerabilityStorageAccount')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers',variables('uniqueSQLName')))]",
        // Private Endpoint values
        "sqlPrivateEndPoint": "[concat(variables('uniqueSQLName'), '-PrivateEndPoint')]",
        "sqlPrivateEndpointConnection" : "[concat(variables('sqlPrivateEndPoint'), '-Conn')]",
        //"uqPrivateEndPointConnection": "[uniqueString('NDC-Test', variables('uniqueSQLName'), 'PrivateEndPointConnection')]",
        //"uqPrivateEndPointConnectionGUID": "[guid(variables('uqPrivateEndPointConnection'))]",
        // Template Links 
        "privateEndpointTemplateUri":"https://github.com/cairneym/DefenceInDepth/blob/master/02_AuditsAndVulnerabilityScans/Solution/CatchUp/Exercise2_SQLLink_PrivateLinkEndpoint.json",
        "dnsEntriesIpconfigParserUri":"https://github.com/cairneym/DefenceInDepth/blob/master/02_AuditsAndVulnerabilityScans/Solution/CatchUp/Exercise2_SQLLink_DNSEntries_IPConfigParser.json",
        "dnsEntriesTemplateUri":"https://github.com/cairneym/DefenceInDepth/blob/master/02_AuditsAndVulnerabilityScans/Solution/CatchUp/Exercise2_SQLLink_DNSEntries.json",
        "dnsEntriesHandlerTemplateUri":"https://github.com/cairneym/DefenceInDepth/blob/master/02_AuditsAndVulnerabilityScans/Solution/CatchUp/Exercise2_SQLLink_DNSEntries_Handler.json"
        
    },
    "resources": [
        {
            "name": "[variables('uniqueSQLName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "event": "NDC Melbourne",
                "deleteAfter": "2020-08-01",
                "displayName": "ndc-sql-mhc68"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlAdminLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled"
            },
            "resources": [
                {
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "apiVersion": "2019-06-01-preview",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "event": "NDC Melbourne",
                        "deleteAfter": "2020-08-01",
                        "displayName": "Sample Database"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
                    ],
                    "sku": {
                        "name": "Basic",
                        "tier": "Basic"
                    },
                    "properties": {
                        "createMode": "Default",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": 104857600,
                        "sampleName": "[variables('databaseName')]",
                        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                        "zoneRedundant": false,
                        "licenseType": "LicenseIncluded",
                        "storageAccountType": "GRS"
                    }
                },
                {
                    "name": "[concat(variables('uniqueSQLName'), '/Microsoft.Authorization/SQLDeleteLock')]",
                    "type": "Microsoft.Sql/servers/providers/locks",
                    "apiVersion": "2016-09-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
                    ],
                    "properties": {
                        "level": "CanNotDelete",
                        "notes": "SQL Server should not be deleted."
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers/administrators",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('uniqueSQLName'), '/ActiveDirectory')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
            ],
            "properties": {
                "administratorType": "ActiveDirectory",
                "login": "SQLAdmins",
                "sid": "[parameters('adGroupSID')]"
            }
        },
        {
            "name": "[variables('auditStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SQL Related Storage Account",
                "deleteAfter": "2020-08-01",
                "event": "NDC Melbourne"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "[concat(variables('auditStorageAccount'), '/Microsoft.Authorization/', variables('uniqueAuditStorageGuid'))]",
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion":  "2020-03-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccount'))]",
                        "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[variables('StorageBlobContributor')]",
                        "principalId": "[reference(resourceId('Microsoft.Sql/servers', variables('uniqueSQLName')), '2019-06-01-preview', 'Full').identity.principalId]",
                        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccount'))]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]
        },
        {
            "name": "[variables('vulnerabilityStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('uniqueSQLName')]"
            ],
            "tags": {
                "displayName": "SQL Related Storage Account",
                "deleteAfter": "2020-08-01",
                "event": "NDC Melbourne"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "[concat(variables('vulnerabilityStorageAccount'), '/Microsoft.Authorization/', variables('uniqueVulnerabilityStorageGuid'))]",
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion":  "2020-03-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('vulnerabilityStorageAccount'))]",
                        "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[variables('StorageBlobContributor')]",
                        "principalId": "[reference(resourceId('Microsoft.Sql/servers', variables('uniqueSQLName')), '2019-06-01-preview', 'Full').identity.principalId]",
                        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('vulnerabilityStorageAccount'))]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]
        },
        {
            "name": "[concat(variables('auditStorageAccount'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccount'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "name": "[concat(variables('vulnerabilityStorageAccount'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('vulnerabilityStorageAccount'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "name": "[concat(variables('auditStorageAccount'), '/default/sqldbauditlogs')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('auditStorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccount'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "name": "[concat(variables('vulnerabilityStorageAccount'), '/default/vulnerability-assessment')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('vulnerabilityStorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('vulnerabilityStorageAccount'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "name": "[concat(variables('uniqueSQLName'), '/Default')]",
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2019-06-01-preview",
            "dependsOn": [
                "[variables('uniqueSQLName')]",
                "[variables('auditStorageAccount')]",
                "[extensionresourceId(resourceid('Microsoft.Storage/storageAccounts', variables('auditStorageAccount')), 'Microsoft.Authorization/roleAssignments', variables('uniqueAuditStorageGuid'))]"
            ],
            "properties": {
                "state": "Enabled",
                "storageEndpoint": "[concat('https://', variables('auditStorageAccount'), '.blob.core.windows.net/')]",
                "retentionDays": 180,
                "auditActionsAndGroups": [
                    "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                    "FAILED_DATABASE_AUTHENTICATION_GROUP",
                    "BATCH_COMPLETED_GROUP"
                ],
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "name": "[concat(variables('uniqueSQLName'), '/Default')]",
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2019-06-01-preview",
            "dependsOn": [
                "[variables('uniqueSQLName')]",
                "[variables('auditStorageAccount')]",
                "[extensionresourceId(resourceid('Microsoft.Storage/storageAccounts', variables('auditStorageAccount')), 'Microsoft.Authorization/roleAssignments', variables('uniqueAuditStorageGuid'))]"
            ],
            "properties": {
                "state": "Enabled",
                "storageEndpoint": "[concat('https://', variables('auditStorageAccount'), '.blob.core.windows.net/')]",
                "retentionDays": 180,
                "auditActionsAndGroups": [
                    "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                    "FAILED_DATABASE_AUTHENTICATION_GROUP",
                    "BATCH_COMPLETED_GROUP"
                ],
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "name": "[concat(variables('uniqueSQLName'), '/Default')]",
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2018-06-01-preview",
            "dependsOn": [
                "[variables('uniqueSQLName')]",
                "[variables('vulnerabilityStorageAccount')]",
                "[extensionresourceId(resourceid('Microsoft.Storage/storageAccounts', variables('vulnerabilityStorageAccount')), 'Microsoft.Authorization/roleAssignments', variables('uniqueVulnerabilityStorageGuid'))]"
            ],
            "properties": {
                "storageContainerPath": "[concat('https://', variables('vulnerabilityStorageAccount'), '.blob.core.windows.net/vulnerability-assessment/')]",
                "recurringScans": {
                    "isEnabled": true,
                    "emailSubscriptionAdmins": true,
                    "emails": [
                        "[parameters('notificationEmail')]"
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('uniqueSQLName'), '/Default')]",
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2017-03-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    "[parameters('notificationEmail')]"
                ],
                "emailAccountAdmins": true,
                "retentionDays": 180
            }
        },
        // {
        //     "name": "[variables('sqlPrivateEndPoint')]",
        //     "type": "Microsoft.Network/privateEndpoints",
        //     "apiVersion": "2020-03-01",
        //     "location": "[resourceGroup().location]",
        //     "dependsOn": [
        //         "[variables('uniqueSQLName')]"
        //     ],
        //     "tags": {
        //         "event": "NDC Melbourne",
        //         "deleteAfter": "2020-08-01"
        //     },
        //     "properties": {
        //         "subnet": {
        //             "id": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'Client-Subnet')]"
        //         },
        //         "privateLinkServiceConnections": [
        //             {
        //                 "name": "[variables('sqlPrivateEndPoint')]",
        //                 "properties": {
        //                     "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]",
        //                     "groupIds": [
        //                         "sqlServer"
        //                     ]
        //                 }
        //             }
        //         ]
        //     }
        // },
        // {
        //     "name": "deployPrivateDNSZone",
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2020-06-01",
        //     "dependsOn": [
        //         "[variables('sqlPrivateEndPoint')]"
        //     ],
        //     "properties": {
        //         "mode": "Incremental",
        //         "template": {
        //             "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        //             "contentVersion": "1.0.0.0",
        //             "resources": [
        //                 {
        //                     "name": "privatelink.database.windows.net",
        //                     "type": "Microsoft.Network/privateDnsZones",
        //                     "apiVersion": "2018-09-01",
        //                     "location": "global",
        //                     "tags": {},
        //                     "properties": {},
        //                     "resources": [
        //                         {
        //                             "name": "[concat('privatelink.database.windows.net', '/', variables('uqPrivateEndPointConnectionGUID'))]",
        //                             "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
        //                             "apiVersion": "2018-09-01",
        //                             "dependsOn": [
        //                                 "['privatelink.database.windows.net']"
        //                             ],
        //                             "location": "global",
        //                             "properties": {
        //                                 "virtualNetwork": {
        //                                     "id": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        //                                 },
        //                                 "registrationEnabled": false
        //                             }
        //                         }
        //                     ]
        //                 }
        //             ],
        //             "outputs": {
        //                 "privateDNSZoneId": {
        //                     "type": "string",
        //                     "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.database.windows.net')]"
        //                 }
        //             }
        //         }
        //     }
        // },
        // {
        //     "name": "deployPrivateVnetLink",
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2020-06-01",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Resources/deployments', 'deployPrivateDNSZone')]"
        //     ],
        //     "properties": {
        //         "mode": "Incremental",
        //         "template": {
        //             "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        //             "contentVersion": "1.0.0.0",
        //             "resources": [
        //                 {
        //                     "name": "[concat('privatelink.database.windows.net', '/', variables('uqPrivateEndPointConnectionGUID'))]",
        //                     "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
        //                     "apiVersion": "2018-09-01",
        //                     "location": "global",
        //                     "properties": {
        //                         "virtualNetwork": {
        //                             "id": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        //                         },
        //                         "registrationEnabled": false
        //                     }
        //                 }
        //             ]
        //         }
        //     }
        // },
        // {
        //     "name": "deployDNSZoneGroup",
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2020-06-01",
        //     "dependsOn": [
        //         "[variables('sqlPrivateEndPoint')]",
        //         "[resourceId('Microsoft.Resources/deployments', 'deployPrivateDNSZone')]"
        //     ],
        //     "properties": {
        //         "mode": "Incremental",
        //         "template": {
        //             "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        //             "contentVersion": "1.0.0.0",
        //             "resources": [
        //                 {
        //                     "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
        //                     "apiVersion": "2020-03-01",
        //                     "name": "[concat(variables('sqlPrivateEndPoint'), '/', 'default')]",
        //                     "location": "[resourceGroup().location]",
        //                     "properties": {
        //                         "privateDnsZoneConfigs": [
        //                             {
        //                                 "name": "privatelink-database-windows-net",
        //                                 "properties": {
        //                                     "privateDnsZoneId": "[reference(resourceId('Microsoft.Resources/deployments', 'deployPrivateDNSZone'), '2020-06-01').outputs.privateDNSZoneId.value]"
        //                                 }
        //                             }
        //                         ]
        //                     }
        //                 }
        //             ]
        //         }
        //     }
        // },
        {
            "name": "[variables('sqlPrivateEndPoint')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceid(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters":{
                    "privateEndpointName": {
                        "value": "[variables('sqlPrivateEndPoint')]"
                    },
                    "privateEndpointConnectionName": {
                        "value": "[variables('sqlPrivateEndpointConnection')]"
                    },
                    "privateSQLServerId": {
                        "value": "[resourceId('Microsoft.Sql/servers', variables('uniqueSQLName'))]"
                    },
                    "subnetId": {
                        "value": "[concat(resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/Client-Subnet')]"
                    }
                },
                "templateLink":{
                "uri": "[variables('privateEndpointTemplateUri')]"
                }
            }
        },
        // Private DNS & vnet linking for private link name resolution
        // // {
        // //     "name": "privatelink.database.windows.net",
        // //     "type": "Microsoft.Network/privateDnsZones",
        // //     "apiVersion": "2018-09-01",
        // //     "location": "global",
        // //     "tags": {
        // //     },
        // //     "properties": {
        // //     }
        // // },
        // // {
        // //     "name": "[concat('privatelink.database.windows.net/', uniqueString(resourceGroup().id))]",
        // //     "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
        // //     "apiVersion": "2018-09-01",
        // //     "location": "global",
        // //     "dependsOn": [
        // //         "privatelink.database.windows.net"
        // //     ],
        // //     "properties": {
        // //         "virtualNetwork": {
        // //             "id": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        // //         },
        // //         "registrationEnabled": false
        // //     }
        // // },
        // // // Need to do this loop as linked deployment.
        // // // This is due to limitations of where reference() function can be used (so not in variables, copy loop lengths, resource names or within another reference function...)
        // // // In practice, we need to get the autogenerated id of the endpoint NIC from the endpoint template output, then reference it in a handler template.
        // // // After the handler template gets the ID, it references the ipconfigurations array of that NIC... Very complicated all because of ARM limitations.
        // // {
        // //     "name": "PrivateDns_Entries_IpconfigParser",
        // //     "type": "Microsoft.Resources/deployments",
        // //     "apiVersion": "2019-10-01",
        // //     "dependsOn": [
        // //         "[variables('sqlPrivateEndPoint')]"
        // //     ],
        // //     "properties": {
        // //         "mode": "Incremental",
        // //         "parameters":{
        // //             "privateDnsZoneName": {
        // //                 "value": "privatelink.database.windows.net"
        // //             },
        // //             "sqlNicId": {
        // //                 "value": "[reference(variables('sqlPrivateEndPoint')).outputs.sqlNicId.value]"
        // //             },
        // //             "dnsEntriesTemplateUri": {
        // //                 "value": "[variables('dnsEntriesTemplateUri')]"
        // //             },
        // //             "dnsEntriesHandlerTemplateUri": {
        // //                 "value": "[variables('dnsEntriesHandlerTemplateUri')]"
        // //             }
        // //         },
        // //         "templateLink":{
        // //             "uri": "[variables('dnsEntriesIpconfigParserUri')]"
        // //         }
        // //     }
        // // },
        // // {
        // //     "name": "deploySQLResourceLock",
        // //     "type": "Microsoft.Resources/deployments",
        // //     "apiVersion": "2019-10-01",
        // //     "dependsOn": [
        // //         "[variables('sqlPrivateEndPoint')]"
        // //     ],
        // //     "properties": {
        // //         "expressionEvaluationOptions": {
        // //             "scope": "outer"
        // //         },
        // //         "mode": "Incremental",
        // //         "template": {
        // //             "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        // //             "contentVersion": "1.0.0.0",
        // //             "parameters": {},
        // //             "variables": {},
        // //             "resources": [
        // //                 {
        // //                     "name": "[concat(parameters('sqlServerName'), '-', parameters('randomiser'))]",
        // //                     "type": "Microsoft.Sql/servers",
        // //                     "apiVersion": "2019-06-01-preview",
        // //                     "location": "[resourceGroup().location]",
        // //                     "tags": {
        // //                         "event": "NDC Melbourne",
        // //                         "deleteAfter": "2020-08-01",
        // //                         "displayName": "ndc-sql-mhc68"
        // //                     },
        // //                     "kind": "v12.0",
        // //                     "identity": {
        // //                         "type": "SystemAssigned"
        // //                     },
        // //                     "properties": {
        // //                         "administratorLogin": "[parameters('sqlAdminLogin')]",
        // //                         "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        // //                         "version": "12.0",
        // //                         "minimalTlsVersion": "1.2",
        // //                         "publicNetworkAccess": "Disabled"
        // //                     },
        // //                     "resources": [
        // //                         {
        // //                             "name": "[concat(parameters('sqlServerName'), '-', parameters('randomiser'), '/Microsoft.Authorization/SQLDeleteLock')]",
        // //                             "type": "Microsoft.Sql/servers/providers/locks",
        // //                             "apiVersion": "2016-09-01",
        // //                             "dependsOn": [
        // //                                 "[resourceId('Microsoft.Sql/servers', concat(parameters('sqlServerName'), '-', parameters('randomiser')))]"
        // //                             ],
        // //                             "properties": {
        // //                                 "level": "CanNotDelete",
        // //                                 "notes": "SQL Server should not be deleted."
        // //                             }
        // //                         }
        // //                     ]
        // //                 }
        // //             ],
        // //             "outputs": {}
        // //         }
        // //     }
        // // }
    ],
    "outputs": {
        "sqlServerName": {
            "type": "string",
            "value": "[variables('uniqueSQLName')]"
        }
        // ,
        // "privateLinkName": {
        //     "type": "string",
        //     "value": "[reference(variables('sqlPrivateEndPoint')).privateLinkServiceConnections]"
        // }
    }
}
